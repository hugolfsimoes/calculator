{"version":3,"sources":["Components/Button.jsx","main/Calculator.jsx","Components/Display.jsx","reportWebVitals.js","index.js"],"names":["Button","props","classes","operation","double","triple","onClick","e","click","label","className","initialState","displayValue","clearDisplay","values","current","Calculator","state","clearMemory","bind","setOperation","addDigit","this","setState","equals","currentOperation","eval","error","n","includes","i","newValue","value","Component","Display","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.de89815b.chunk.js","sourcesContent":["import React from \"react\";\nimport './Button.css';\n\nexport default function Button(props) {\n  let classes = 'button '\n  classes += props.operation? 'operation': ''\n  classes += props.double? 'double': ''\n  classes += props.triple? 'triple': ''\n  \n  return(\n    <button\n    onClick={e => props.click(props.label)} \n    className={classes}>\n      {props.label}\n    </button>\n  )\n}","import React, { Component } from 'react';\nimport Button from '../Components/Button';\nimport Display from '../Components/Display';\nimport './Calculator.css';\n\nconst initialState = {\n  displayValue: '0',\n  clearDisplay: false,\n  operation: null,\n  values: [0, 0],\n  current: 0,\n};\n\nexport default class Calculator extends Component {\n  state = {\n    ...initialState,\n  };\n  constructor(props) {\n    super(props);\n    this.clearMemory = this.clearMemory.bind(this);\n    this.setOperation = this.setOperation.bind(this);\n    this.addDigit = this.addDigit.bind(this);\n  }\n\n  clearMemory() {\n    this.setState({ ...initialState });\n  }\n  setOperation(operation) {\n    if (this.state.current === 0) {\n      this.setState({ operation, current: 1, clearDisplay: true });\n    } else {\n      const equals = operation === '=';\n      const currentOperation = this.state.operation;\n      const values = [...this.state.values];\n      try {\n        values[0] = eval(`${values[0]} ${currentOperation} ${values[1]}`);\n      } catch (error) {\n        values[0] = this.state.values[0];\n      }\n      values[1] = 0;\n\n      this.setState({\n        displayValue: values[0],\n        operation: equals ? null : operation,\n        current: equals ? 0 : 1,\n        clearDisplay: !equals,\n        values,\n      });\n    }\n  }\n  addDigit(n) {\n    if (n === '.' && this.state.displayValue.includes('.')) return;\n    const clearDisplay =\n      this.state.displayValue === '0' || this.state.clearDisplay;\n\n    const currentValue = clearDisplay ? '' : this.state.displayValue;\n    const displayValue = currentValue + n;\n    this.setState({ displayValue, clearDisplay: false });\n\n    if (n !== '.') {\n      const i = this.state.current;\n      const newValue = +displayValue;\n      const values = [...this.state.values];\n      values[i] = newValue;\n      this.setState({ values });\n    }\n  }\n\n  render() {\n    return (\n      <div className='calculator'>\n        <Display value={this.state.displayValue} />\n        <Button label='AC' click={this.clearMemory} triple />\n        <Button label='/' click={this.setOperation} operation />\n        <Button label='7' click={this.addDigit} />\n        <Button label='8' click={this.addDigit} />\n        <Button label='9' click={this.addDigit} />\n        <Button label='*' click={this.setOperation} operation />\n        <Button label='4' click={this.addDigit} />\n        <Button label='5' click={this.addDigit} />\n        <Button label='6' click={this.addDigit} />\n        <Button label='-' click={this.setOperation} operation />\n        <Button label='1' click={this.addDigit} />\n        <Button label='2' click={this.addDigit} />\n        <Button label='3' click={this.addDigit} />\n        <Button label='+' click={this.setOperation} operation />\n        <Button label='0' click={this.addDigit} double />\n        <Button label='.' click={this.addDigit} />\n        <Button label='=' click={this.setOperation} operation />\n      </div>\n    );\n  }\n}\n","import React from 'react';\nimport './Display.css';\n\nexport default function Display(props) {\n  return(\n    <div className=\"display\">{props.value}</div>\n  )\n}","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport Calculator from \"./main/Calculator\";\nimport reportWebVitals from \"./reportWebVitals\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <h1>Calculator</h1>\n    <Calculator />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}